// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id          String       @id @default(cuid())
  firstName   String       @default("")
  lastName    String       @default("")
  birthDate   DateTime?
  email       String       @unique @default("")
  password    String
  district    District?    @relation("District_users")
  accountType AccountType? @relation("AccountType_users")
  polls       Poll[]       @relation("Poll_createdBy")
  responses   Response[]   @relation("Response_user")
}

model District {
  id      String  @id @default(cuid())
  name    String  @default("")
  users   User?   @relation("District_users", fields: [usersId], references: [id])
  usersId String? @unique @map("users")
}

model AccountType {
  id      String  @id @default(cuid())
  name    String  @default("")
  users   User?   @relation("AccountType_users", fields: [usersId], references: [id])
  usersId String? @unique @map("users")
}

model Poll {
  id          String      @id @default(cuid())
  question    String      @default("")
  createdAt   DateTime?   @default(now())
  createdBy   User?       @relation("Poll_createdBy", fields: [createdById], references: [id])
  createdById String?     @map("createdBy")
  access      PollAccess? @relation("Poll_access", fields: [accessId], references: [id])
  accessId    String?     @unique @map("access")
  answers     Answer[]    @relation("Answer_poll")
  tags        Tag[]       @relation("Poll_tags")

  @@index([createdById])
}

model PollAccess {
  id    String  @id @default(cuid())
  level String? @default("draft")
  polls Poll?   @relation("Poll_access")
}

model Answer {
  id        String     @id @default(cuid())
  answer    String     @default("")
  poll      Poll?      @relation("Answer_poll", fields: [pollId], references: [id])
  pollId    String?    @map("poll")
  responses Response[] @relation("Response_answer")

  @@index([pollId])
}

model Response {
  id       String  @id @default(cuid())
  answer   Answer? @relation("Response_answer", fields: [answerId], references: [id])
  answerId String? @map("answer")
  user     User?   @relation("Response_user", fields: [userId], references: [id])
  userId   String? @map("user")

  @@index([answerId])
  @@index([userId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  polls Poll[] @relation("Poll_tags")
}